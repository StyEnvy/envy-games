# Generated by Django 5.1.11 on 2025-09-06 18:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('board_type', models.CharField(choices=[('tasks', 'Tasks'), ('roadmap', 'Roadmap')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.PositiveIntegerField()),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='projects.board')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('version', models.CharField(default='0.1.0', max_length=20)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('hold', 'On Hold'), ('completed', 'Completed'), ('archived', 'Archived')], db_index=True, default='planning', max_length=20)),
                ('project_type', models.CharField(choices=[('game_unity', 'Game - Unity'), ('game_ue', 'Game - UE'), ('game_other', 'Game - Other'), ('plugin', 'Plugin'), ('mod', 'Mod'), ('mcmod', 'Minecraft Mod'), ('discord_bot', 'Discord Bot'), ('software', 'Software'), ('webapp', 'Web/Webapp')], db_index=True, default='software', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='board',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boards', to='projects.project'),
        ),
        migrations.CreateModel(
            name='ProjectMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('lead', 'Lead'), ('contributor', 'Contributor'), ('viewer', 'Viewer')], default='contributor', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='memberships_added', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['project', '-role', 'joined_at'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(related_name='member_projects', through='projects.ProjectMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('task_type', models.CharField(choices=[('feature', 'Feature'), ('bug', 'Bug'), ('task', 'Task'), ('idea', 'Idea')], default='task', max_length=20)),
                ('priority', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=20)),
                ('position', models.PositiveIntegerField(blank=True, null=True)),
                ('is_roadmap_item', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='projects.column')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project')),
            ],
            options={
                'ordering': ['position', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_attachments/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='projects.task')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='column',
            constraint=models.UniqueConstraint(fields=('board', 'position'), name='uniq_board_position'),
        ),
        migrations.AddConstraint(
            model_name='board',
            constraint=models.UniqueConstraint(fields=('project', 'board_type'), name='uniq_project_boardtype'),
        ),
        migrations.AddIndex(
            model_name='projectmembership',
            index=models.Index(fields=['project', 'user', 'is_active'], name='projects_pr_project_f9cf11_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmembership',
            index=models.Index(fields=['user', 'is_active'], name='projects_pr_user_id_f0db56_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projectmembership',
            unique_together={('project', 'user')},
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_type'], name='projects_pr_project_573ce6_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status', 'project_type'], name='projects_pr_status_b41d0a_idx'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('column', 'position'), name='uniq_column_task_position', violation_error_message='A task already occupies this position in the column.'),
        ),
    ]
